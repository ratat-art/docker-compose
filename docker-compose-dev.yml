version: "3.8"

services:
  postgres:
    container_name: postgres-dev
    image: postgres:alpine
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "-q",
          "-d",
          "${POSTGRES_DB}",
          "-U",
          "${POSTGRES_USER}"
        ]
      timeout: 45s
      interval: 10s
      retries: 10
    restart: always
    env_file:
      - .env.dev
    volumes:
      - postgres-dev:/var/lib/postgresql/data
    expose:
      - ${POSTGRES_PORT}

  redis:
    container_name: redis-dev
    image: redis:alpine
    volumes:
      - redis-dev:/var/lib/redis
    expose:
      - ${REDIS_PORT}

  rust-api:
    container_name: rust-api-dev
    build:
      context: ../rust-api/
      target: dev
    volumes:
      - ../rust-api:/app
      - /app/target
    expose:
      - ${RUST_API_PORT}
    environment:
      HOST: ${HOST}
      PORT: ${RUST_API_PORT}
    depends_on:
      postgres:
        condition: service_healthy
    links:
      - postgres
      - redis

  svelte-frontend:
    container_name: svelte-frontend-dev
    build:
      context: ../svelte-frontend/
      target: dev
    volumes:
      - ../svelte-frontend:/app
      - /app/node_modules
    ports:
      - ${SVELTE_FRONTEND_PORT}:${SVELTE_FRONTEND_PORT}
      # For Hot Module Reloading
      - 24678:24678
    expose:
      - ${SVELTE_FRONTEND_PORT}
      # For Hot Module Reloading
      - 24678
    environment:
      HOST: ${HOST}
      PORT: ${SVELTE_FRONTEND_PORT}
      NODE_ENV: development
    depends_on:
      - rust-api

  nginx:
    container_name: nginx-dev
    image: nginx:alpine
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - ./default-dev.conf.template:/etc/nginx/templates/default.conf.template
    env_file:
      - .env.dev
    links:
      - rust-api
      - svelte-frontend

volumes:
  postgres-dev: null
  redis-dev: null
